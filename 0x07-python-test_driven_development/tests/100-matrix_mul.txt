>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> m_a = [[2, 0], [1, 2]]
>>> m_b = []
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
ValueError: m_b can't be empty
>>> m_a = []
>>> m_b = [[2, 0], [1, 2]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
ValueError: m_a can't be empty
>>> m_a = [[4, 13], [4, 13]]
>>> m_b = [[4.4, 4], [4, 3.9]]
>>> print(matrix_mul(m_a, m_b))
[[69.6, 66.69999999999999], [69.6, 66.69999999999999]]
>>> m_a = [[6, 9], [6, 9]]
>>> m_b = [[]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
ValueError: m_b can't be empty
>>> m_a = [[6, 9], [6, 9]]
>>> m_b = [[6, 9], [6, 9, 6, 9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size
>>> m_a = [["hello there"], ["kohai"]]
>>> print(matrix_mul(m_a, m_a))
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats
>>> m_a = [[6, 9], [6, 9, 6, 9]]
>>> m_b = [[6, 9], [6, 9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size
>>> m_a = (6, 9)
>>> m_b = [[6, 9], [6, 9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
TypeError: m_a must be a list
