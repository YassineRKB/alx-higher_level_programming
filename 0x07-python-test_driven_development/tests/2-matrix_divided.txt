>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = {69, 69, 69, 69}
>>> print(matrix_divided(matrix, 69))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2], [3, 4]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> matrix = [[15, 12, 33], [64, 15, 26.47]]
>>> print(matrix_divided(matrix, 2))
[[7.5, 6.0, 16.5], [32.0, 7.5, 13.23]]
>>> matrix = [[-1.5], [-2.5]]
>>> print(matrix_divided(matrix, 2.5))
[[-0.6], [-1.0]]
>>> matrix = [[True], [False]]
>>> print(matrix_divided(matrix, True))
[[1.0], [0.0]]
>>> matrix = [[1, 2, 3], [4, 5, 6.9]]
>>> print(matrix_divided(matrix, float("inf")))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> print(matrix_divided(None, 69))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = []
>>> print(matrix_divided(matrix, 69))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[], [], []]
>>> print(matrix_divided(matrix, 69))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3], [4]]
>>> print(matrix_divided(matrix, 69))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> matrix = [[1, 2, 3], [4, 5, 6], [7]]
>>> print(matrix_divided(matrix, 69))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> matrix = [["operation"], ["69."]]
>>> print(matrix_divided(matrix, 69))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3], {"operation" : 69}]
>>> print(matrix_divided(matrix, 69))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[69, 69], 3, {4, 5}]
>>> print(matrix_divided(matrix, 69))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = ([69, 69], [69, 69])
>>> print(matrix_divided(matrix, 69))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[69, 69], [69, (69, 69)]]
>>> print(matrix_divided(matrix, 69))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[69, 69, 69], [69, 69, 6.9]]
>>> print(matrix_divided(matrix, 69, 69, 69))
Traceback (most recent call last):
...
TypeError: matrix_divided() takes 2 positional arguments but 4 were given
>>> matrix = [[69, 69], [69, 69]]
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix = [[69, 69], [312, 74]]
>>> print(matrix_divided(matrix, "69"))
Traceback (most recent call last):
...
TypeError: div must be a number
